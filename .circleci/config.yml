# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:9.7
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      # install the package dependencies #& use a frozen lockfile as recommended here: https://yarnpkg.com/lang/en/docs/cli/install/
      - run: yarn install #--frozen-lockfile 

      # save this stuff so we can speed up things next run if no changes
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # setup an environment variable for the build name
      - run: export BUILD_NAME=$([ "$CIRCLE_BRANCH" == "master" ] && echo "prod" || echo "dev")
      - run: echo $BUILD_NAME
      - run: echo "$BUILD_NAME"

      # build the thing
      - run: yarn build:prod

      # download google cloud sdk
      - run: wget https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-191.0.0-linux-x86_64.tar.gz
      - run: tar -zxf google-cloud-sdk-191.0.0-linux-x86_64.tar.gz
      - run: rm google-cloud-sdk-191.0.0-linux-x86_64.tar.gz
      - run: ./google-cloud-sdk/bin/gcloud components install kubectl

      # authenticate with google cloud
      - run: echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
      - run: sudo ./google-cloud-sdk/bin/gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
      - run: sudo ./google-cloud-sdk/bin/gcloud config set project $GCLOUD_PROJECT

      # deploy the project
      - run: sudo ./google-cloud-sdk/bin/gcloud app deploy

      # update the dispatch file if it exists
      - run: "[ -f ./dispatch.yaml ] && (sudo ./google-cloud-sdk/bin/gcloud app deploy dispatch.yaml) || echo \"No dispatch file found\""
